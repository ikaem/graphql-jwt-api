"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.default = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\n    type Query {\n        hello: String\n        getUsers: [User]\n        getUser(id: Int!): User\n        getUserForEdit(id: Int): UserForEdit\n        getCountries: [Country]\n        getCountry(id: Int!): Country\n        getPaginatedCountries(cursor: Int): PaginatedCountries\n        getPaginatedUsers(cursor: Int): PaginatedUsers\n    }\n\n    type Mutation {\n        newUser(\n            email: String!\n            password: String!\n            first_name: String!\n            last_name: String!\n            country: Int!\n            city: String!\n            website: String!\n            age: Int!\n            hobbies: [String]!\n            avatar_link: String!\n        ): User\n\n        editUser(\n            user_id: Int!\n            email: String!\n            first_name: String!\n            last_name: String!\n            country: Int!\n            city: String!\n            website: String!\n            age: Int!\n            hobbies: [String]!\n            avatar_link: String!\n        ): User\n\n        deleteUser(user_id: Int): Boolean\n        login: Me\n        register: Boolean\n        addCountry(country_name: String!): Country\n    }\n\n    type User {\n        user_id: ID\n        email: String\n        first_name: String\n        last_name: String\n        city: String\n        website: String\n        age: Int\n        hobbies: [String]\n        country: Country\n        avatar_link: String\n    }\n\n    type UserForEdit {\n        user: User\n        countries: [Country]\n    }\n\n    type Country {\n        country_id: ID\n        country_name: String\n    }\n\n    type PaginatedCountries {\n        countries: [Country]\n        cursor: Int\n        hasNextPage: Boolean\n        totalCountries: Int\n        countriesPerPage: Int\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        cursor: Int\n        hasNextPage: Boolean\n        totalUsers: Int\n        usersPerPage: Int\n    }\n\n    type Me {\n        user_id: ID\n        first_name: String\n        last_name: String\n        avatar: String\n    }\n"], ["\n\n    type Query {\n        hello: String\n        getUsers: [User]\n        getUser(id: Int!): User\n        getUserForEdit(id: Int): UserForEdit\n        getCountries: [Country]\n        getCountry(id: Int!): Country\n        getPaginatedCountries(cursor: Int): PaginatedCountries\n        getPaginatedUsers(cursor: Int): PaginatedUsers\n    }\n\n    type Mutation {\n        newUser(\n            email: String!\n            password: String!\n            first_name: String!\n            last_name: String!\n            country: Int!\n            city: String!\n            website: String!\n            age: Int!\n            hobbies: [String]!\n            avatar_link: String!\n        ): User\n\n        editUser(\n            user_id: Int!\n            email: String!\n            first_name: String!\n            last_name: String!\n            country: Int!\n            city: String!\n            website: String!\n            age: Int!\n            hobbies: [String]!\n            avatar_link: String!\n        ): User\n\n        deleteUser(user_id: Int): Boolean\n        login: Me\n        register: Boolean\n        addCountry(country_name: String!): Country\n    }\n\n    type User {\n        user_id: ID\n        email: String\n        first_name: String\n        last_name: String\n        city: String\n        website: String\n        age: Int\n        hobbies: [String]\n        country: Country\n        avatar_link: String\n    }\n\n    type UserForEdit {\n        user: User\n        countries: [Country]\n    }\n\n    type Country {\n        country_id: ID\n        country_name: String\n    }\n\n    type PaginatedCountries {\n        countries: [Country]\n        cursor: Int\n        hasNextPage: Boolean\n        totalCountries: Int\n        countriesPerPage: Int\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        cursor: Int\n        hasNextPage: Boolean\n        totalUsers: Int\n        usersPerPage: Int\n    }\n\n    type Me {\n        user_id: ID\n        first_name: String\n        last_name: String\n        avatar: String\n    }\n"])));
var templateObject_1;
